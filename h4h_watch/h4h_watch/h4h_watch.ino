#include <Wire.h>
#include <MultiLCD.h>
#include <SoftwareSerial.h>

LCD_SSD1306 lcd; /* for SSD1306 OLED module */

//----- BT instance
SoftwareSerial BTSerial(2, 3); //Connect HC-06, RX, TX

int BUTTON1 = 5;
int button1State = HIGH;

int BUTTON2 = 7;
int button2State = HIGH;

int BUTTON3 = 8;
int button3State = HIGH;

int LED1 = 6;

static const PROGMEM uint8_t smile[48 * 48 / 8] = {
  0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0xF0,0xF8,0xF8,0xFC,0xFC,0xFE,0xFE,0x7E,0x7F,0x7F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x3F,0x7F,0x7F,0x7E,0xFE,0xFE,0xFC,0xFC,0xF8,0xF8,0xF0,0xE0,0xC0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0xC0,0xF0,0xFC,0xFE,0xFF,0xFF,0xFF,0x3F,0x1F,0x0F,0x07,0x03,0x01,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x01,0x03,0x07,0x0F,0x1F,0x3F,0xFF,0xFF,0xFF,0xFE,0xFC,0xF0,0xC0,0x00,
  0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x1F,0x1F,0x1F,0x3F,0x1F,0x1F,0x02,0x00,0x00,0x00,0x00,0x06,0x1F,0x1F,0x1F,0x3F,0x1F,0x1F,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,
  0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x30,0xF8,0xF8,0xF8,0xF8,0xE0,0xC0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0xF8,0xF8,0xFC,0xF8,0x30,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,
  0x00,0x03,0x0F,0x3F,0x7F,0xFF,0xFF,0xFF,0xFC,0xF8,0xF0,0xE1,0xC7,0x87,0x0F,0x1F,0x3F,0x3F,0x3E,0x7E,0x7C,0x7C,0x7C,0x78,0x78,0x7C,0x7C,0x7C,0x7E,0x3E,0x3F,0x3F,0x1F,0x0F,0x87,0xC7,0xE1,0xF0,0xF8,0xFC,0xFF,0xFF,0xFF,0x7F,0x3F,0x0F,0x03,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x07,0x0F,0x1F,0x1F,0x3F,0x3F,0x7F,0x7F,0x7E,0xFE,0xFE,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFC,0xFE,0xFE,0x7E,0x7F,0x7F,0x3F,0x3F,0x1F,0x1F,0x0F,0x07,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
};

void setup()
{
  lcd.begin();
  
  pinMode(BUTTON1, INPUT_PULLUP);
  pinMode(BUTTON2, INPUT_PULLUP);
  pinMode(BUTTON3, INPUT_PULLUP);
  pinMode(LED1, OUTPUT);
  
  BTSerial.begin(9600); // set the data rate for the BT port
  Serial.begin(9600); 
  drawText();
}

void loop()
{
  if (digitalRead(BUTTON1) == HIGH && button1State == LOW) {
    // transition
    Serial.write("Button 1 released\r\n");
    drawText();
    button1State = HIGH;
    digitalWrite(LED1, LOW);
  }
  
  if (digitalRead(BUTTON1) == LOW && button1State == HIGH) {
    // transition
    Serial.write("Button 1 pressed\r\n");
    drawSmile();
    button1State = LOW;
    digitalWrite(LED1, HIGH);
  }

  if (digitalRead(BUTTON2) == LOW && button2State == HIGH) {
    // transition
    Serial.write("Button 2 down\r\n");
  }

  if (digitalRead(BUTTON3) == LOW && button3State == HIGH) {
    // transition
    Serial.write("Button 3 down\r\n");
  }

  if (BTSerial.available()) {
    byte c = BTSerial.read();
    Serial.write(c);
    lcd.print("" + c);
  }

  delay(10);
}

void drawSmile() {
  lcd.clear();
  lcd.draw(smile, 40, 8, 48, 48);
}

void drawText() {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.setFont(FONT_SIZE_SMALL);
  lcd.print("Hello, world!");

  lcd.setCursor(0, 1);
  lcd.setFont(FONT_SIZE_MEDIUM);
  lcd.print("Hello, world!");

  lcd.setCursor(0, 3);
  lcd.setFont(FONT_SIZE_SMALL);
  lcd.printLong(12345678);

  lcd.setCursor(64, 3);
  lcd.setFont(FONT_SIZE_MEDIUM);
  lcd.printLong(12345678);

  lcd.setCursor(0, 4);
  lcd.setFont(FONT_SIZE_LARGE);
  lcd.printLong(12345678);

  lcd.setCursor(0, 6);
  lcd.setFont(FONT_SIZE_XLARGE);
  lcd.printLong(12345678);
}

void demo() {
  drawSmile();
  delay(1000);

  drawText();
  delay(1000);
}
